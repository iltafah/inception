
#1 [ftp internal] load build definition from Dockerfile
#1 transferring dockerfile: 32B done
#1 DONE 0.0s

#2 [adminer internal] load build definition from Dockerfile
#2 transferring dockerfile: 32B done
#2 DONE 0.0s

#3 [wordpress internal] load build definition from Dockerfile
#3 transferring dockerfile: 32B done
#3 DONE 0.0s

#4 [static-site internal] load build definition from Dockerfile
#4 transferring dockerfile: 32B done
#4 DONE 0.0s

#5 [nginx internal] load build definition from Dockerfile
#5 transferring dockerfile: 32B done
#5 DONE 0.0s

#6 [mariadb internal] load build definition from Dockerfile
#6 transferring dockerfile: 32B done
#6 DONE 0.0s

#7 [portainer internal] load build definition from Dockerfile
#7 transferring dockerfile: 32B done
#7 DONE 0.0s

#8 [redis internal] load build definition from Dockerfile
#8 transferring dockerfile: 31B done
#8 DONE 0.0s

#9 [ftp internal] load .dockerignore
#9 transferring context: 32B done
#9 DONE 0.0s

#10 [static-site internal] load .dockerignore
#10 transferring context: 32B done
#10 DONE 0.0s

#11 [adminer internal] load .dockerignore
#11 transferring context: 32B done
#11 DONE 0.0s

#12 [nginx internal] load .dockerignore
#12 transferring context: 32B done
#12 DONE 0.0s

#13 [portainer internal] load .dockerignore
#13 transferring context: 32B done
#13 DONE 0.0s

#14 [wordpress internal] load .dockerignore
#14 transferring context: 2B done
#14 DONE 0.0s

#15 [mariadb internal] load .dockerignore
#15 transferring context: 32B done
#15 DONE 0.0s

#16 [redis internal] load .dockerignore
#16 transferring context: 32B done
#16 DONE 0.0s

#17 [mariadb internal] load metadata for docker.io/library/alpine:3.19
#17 DONE 0.7s

#18 [nginx internal] load build context
#18 transferring context: 63B done
#18 DONE 0.0s

#19 [wordpress internal] load build context
#19 transferring context: 59B done
#19 DONE 0.0s

#20 [static-site internal] load build context
#20 transferring context: 5.84kB 0.1s done
#20 DONE 0.1s

#21 [mariadb internal] load build context
#21 transferring context: 59B done
#21 DONE 0.0s

#22 [adminer 1/5] FROM docker.io/library/alpine:3.19@sha256:c5b1261d6d3e43071626931fc004f70149baeba2c8ec672bd4f27761f8e1ad6b
#22 CACHED

#23 [redis 2/5] RUN apk upgrade && apk update
#23 0.236 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/main/x86_64/APKINDEX.tar.gz
#23 0.705 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/community/x86_64/APKINDEX.tar.gz
#23 1.139 Upgrading critical system libraries and apk-tools:
#23 1.139 (1/1) Upgrading apk-tools (2.14.0-r5 -> 2.14.4-r0)
#23 1.183 Executing busybox-1.36.1-r15.trigger
#23 1.236 Continuing the upgrade transaction with new apk-tools:
#23 1.241 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/main/x86_64/APKINDEX.tar.gz
#23 1.613 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/community/x86_64/APKINDEX.tar.gz
#23 2.000 (1/3) Upgrading ca-certificates-bundle (20230506-r0 -> 20240226-r0)
#23 2.051 (2/3) Upgrading libcrypto3 (3.1.4-r5 -> 3.1.4-r6)
#23 2.158 (3/3) Upgrading libssl3 (3.1.4-r5 -> 3.1.4-r6)
#23 2.212 OK: 7 MiB in 15 packages
#23 2.261 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/main/x86_64/APKINDEX.tar.gz
#23 2.711 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/community/x86_64/APKINDEX.tar.gz
#23 3.250 v3.19.1-476-g0fc5112363c [https://dl-cdn.alpinelinux.org/alpine/v3.19/main]
#23 3.250 v3.19.1-483-g58d20cc4409 [https://dl-cdn.alpinelinux.org/alpine/v3.19/community]
#23 3.250 OK: 22991 distinct packages available
#23 DONE 3.5s

#24 [adminer 3/5] RUN apk add wget php82 php82-mysqli php82-session
#24 0.574 (1/16) Installing php82-common (8.2.18-r0)
#24 0.763 (2/16) Installing argon2-libs (20190702-r5)
#24 0.805 (3/16) Installing ncurses-terminfo-base (6.4_p20231125-r0)
#24 0.850 (4/16) Installing libncursesw (6.4_p20231125-r0)
#24 1.037 (5/16) Installing libedit (20230828.3.1-r3)
#24 1.085 (6/16) Installing pcre2 (10.42-r2)
#24 1.175 (7/16) Installing xz-libs (5.4.5-r0)
#24 1.254 (8/16) Installing libxml2 (2.11.7-r0)
#24 1.372 (9/16) Installing php82 (8.2.18-r0)
#24 ...

#25 [redis 3/3] RUN apk add redis
#0 0.878 (1/1) Installing redis (7.2.4-r0)
#0 1.141 Executing redis-7.2.4-r0.pre-install
#0 1.404 Executing redis-7.2.4-r0.post-install
#0 1.406 Executing busybox-1.36.1-r15.trigger
#0 1.411 OK: 11 MiB in 16 packages
#25 DONE 1.5s

#26 [redis] exporting to image
#26 exporting layers 0.1s done
#26 writing image sha256:0725693fe8e236361ef1ae4b80157854ef664d9ef72b4da3b64708dd2855bbe1 done
#26 naming to docker.io/library/redis done
#26 DONE 0.1s

#24 [adminer 3/5] RUN apk add wget php82 php82-mysqli php82-session
#24 1.619 (10/16) Installing php82-openssl (8.2.18-r0)
#24 1.671 (11/16) Installing php82-mysqlnd (8.2.18-r0)
#24 1.712 (12/16) Installing php82-mysqli (8.2.18-r0)
#24 1.755 (13/16) Installing php82-session (8.2.18-r0)
#24 1.796 (14/16) Installing libunistring (1.1-r2)
#24 1.931 (15/16) Installing libidn2 (2.3.4-r4)
#24 1.991 (16/16) Installing wget (1.21.4-r0)
#24 2.059 Executing busybox-1.36.1-r15.trigger
#24 2.065 OK: 21 MiB in 31 packages
#24 DONE 2.2s

#27 [adminer 4/5] RUN mkdir -p /var/www/html/
#27 DONE 0.3s

#28 [nginx 3/6] RUN apk add nginx && apk add openssl
#0 0.910 (1/2) Installing pcre (8.45-r3)
#0 1.146 (2/2) Installing nginx (1.24.0-r16)
#0 1.242 Executing nginx-1.24.0-r16.pre-install
#0 1.326 Executing nginx-1.24.0-r16.post-install
#0 1.330 Executing busybox-1.36.1-r15.trigger
#0 1.337 OK: 9 MiB in 17 packages
#0 1.971 (1/1) Installing openssl (3.1.4-r6)
#0 2.328 Executing busybox-1.36.1-r15.trigger
#0 2.328 OK: 10 MiB in 18 packages
#28 DONE 2.5s

#29 [mariadb 3/7] RUN apk add curl mariadb mariadb-client openrc
#0 0.619 (1/29) Installing ca-certificates (20240226-r0)
#0 0.868 (2/29) Installing brotli-libs (1.1.0-r1)
#0 1.042 (3/29) Installing c-ares (1.27.0-r0)
#0 1.088 (4/29) Installing libunistring (1.1-r2)
#0 1.293 (5/29) Installing libidn2 (2.3.4-r4)
#0 1.347 (6/29) Installing nghttp2-libs (1.58.0-r0)
#0 1.437 (7/29) Installing libcurl (8.5.0-r0)
#0 1.533 (8/29) Installing curl (8.5.0-r0)
#0 1.598 (9/29) Installing mariadb-common (10.11.6-r0)
#0 1.699 (10/29) Installing libaio (0.3.113-r2)
#0 1.735 (11/29) Installing libgcc (13.2.1_git20231014-r0)
#0 1.780 (12/29) Installing xz-libs (5.4.5-r0)
#0 1.833 (13/29) Installing ncurses-terminfo-base (6.4_p20231125-r0)
#0 1.876 (14/29) Installing libncursesw (6.4_p20231125-r0)
#0 1.941 (15/29) Installing skalibs (2.14.0.1-r0)
#0 1.993 (16/29) Installing utmps-libs (0.1.2.2-r0)
#0 2.031 (17/29) Installing linux-pam (1.5.3-r7)
#0 2.103 (18/29) Installing pcre2 (10.42-r2)
#0 2.196 (19/29) Installing libstdc++ (13.2.1_git20231014-r0)
#0 2.447 (20/29) Installing libxml2 (2.11.7-r0)
#29 2.610 (21/29) Installing zstd-libs (1.5.5-r8)
#29 2.737 (22/29) Installing mariadb (10.11.6-r0)
#29 ...

#30 [nginx 4/6] RUN mkdir /var/www/html
#30 DONE 0.3s

#29 [mariadb 3/7] RUN apk add curl mariadb mariadb-client openrc
#29 2.806 Executing mariadb-10.11.6-r0.pre-install
#29 ...

#31 [nginx 5/6] RUN openssl req -x509 -nodes -days 365 -subj "/C=CA/ST=QC/O=Company, Inc./CN=mydomain.com" -addext "subjectAltName=DNS:mydomain.com" -newkey rsa:2048 -keyout /etc/ssl/private/nginx-selfsigned.key -out /etc/ssl/certs/nginx-selfsigned.crt
#0 0.324 ..+...+...+.....+....+......+...+.....+......+...+.+..+...+.+...+........+....+......+...+..+...+.......+++++++++++++++++++++++++++++++++++++++*..+.....+++++++++++++++++++++++++++++++++++++++*.+.+......+...+............+..+................+..+...+.......+........+....+..+................+..+...+...+....+............+......+...+..+...+.......+..+.......+...+..+...+.......+........+.++++++

#0 0.439 -----
#31 DONE 0.5s

#32 [nginx 6/6] COPY conf/default.conf /etc/nginx/http.d/
#32 DONE 0.0s

#26 [nginx] exporting to image
#26 exporting layers 0.0s done
#26 writing image sha256:d89d12e4351a9cdaea2733766552c698e6a20a09ef17c0d9d359f1d3f85efc29 done
#26 naming to docker.io/library/nginx done
#26 DONE 0.1s

#33 [adminer 5/5] RUN wget "http://www.adminer.org/latest.php" -O /var/www/html/adminer.php
#0 0.350 --2024-05-03 12:01:09-- http://www.adminer.org/latest.php
#0 0.350 Resolving www.adminer.org (www.adminer.org)... 95.168.218.179, 2a01:28:ca:112::1:907
#0 0.353 Connecting to www.adminer.org (www.adminer.org)|95.168.218.179|:80... connected.
#0 0.430 HTTP request sent, awaiting response... 301 Moved Permanently
#0 0.509 Location: https://www.adminer.org/latest.php [following]
#0 0.509 --2024-05-03 12:01:09-- https://www.adminer.org/latest.php
#0 0.536 Connecting to www.adminer.org (www.adminer.org)|95.168.218.179|:443... connected.
#0 0.766 HTTP request sent, awaiting response... 302 Found
#0 0.842 Location: static/download/4.8.1/adminer-4.8.1.php [following]
#0 0.842 --2024-05-03 12:01:09-- https://www.adminer.org/static/download/4.8.1/adminer-4.8.1.php
#0 0.842 Reusing existing connection to www.adminer.org:443.
#0 0.842 HTTP request sent, awaiting response... 200 OK
#0 0.919 Length: 476603 (465K) [application/octet-stream]
#0 0.919 Saving to: '/var/www/html/adminer.php'
#33 0.991
#33 0.991 0K .......... .......... .......... .......... .......... 10% 346K 1s
#33 1.064 50K .......... .......... .......... .......... .......... 21% 537K 1s
#33 1.157 100K .......... .......... .......... .......... .......... 32% 5.92M 1s
#33 1.165 150K .......... .......... .......... .......... .......... 42% 779K 0s
#33 1.229 200K .......... .......... .......... .......... .......... 53% 5.00M 0s
#33 1.239 250K .......... .......... .......... .......... .......... 64% 811K 0s
#33 1.301 300K .......... .......... .......... .......... .......... 75% 5.50M 0s
#33 1.310 350K .......... .......... .......... .......... .......... 85% 778K 0s
#33 1.378 400K .......... .......... .......... .......... .......... 96% 3.04M 0s
#33 1.390 450K .......... ..... 100% 35.0M=0.5s
#33 1.390
#33 1.391 2024-05-03 12:01:10 (988 KB/s) - '/var/www/html/adminer.php' saved [476603/476603]
#33 1.391
#33 DONE 1.5s

#34 [ftp 3/6] RUN apk add openrc vim lftp vsftpd
#0 0.706 (1/17) Installing ncurses-terminfo-base (6.4_p20231125-r0)
#0 0.888 (2/17) Installing libncursesw (6.4_p20231125-r0)
#0 0.994 (3/17) Installing readline (8.2.1-r2)
#0 1.041 (4/17) Installing libgcc (13.2.1_git20231014-r0)
#0 1.087 (5/17) Installing libstdc++ (13.2.1_git20231014-r0)
#0 1.349 (6/17) Installing lftp (4.9.2-r6)
#0 1.542 (7/17) Installing ifupdown-ng (0.12.1-r4)
#0 1.590 (8/17) Installing libcap2 (2.69-r1)
#0 1.629 (9/17) Installing openrc (0.52.1-r2)
#0 1.706 Executing openrc-0.52.1-r2.post-install
#0 1.709 (10/17) Installing vim-common (9.0.2127-r0)
#0 3.089 (11/17) Installing xxd (9.0.2127-r0)
#0 3.129 (12/17) Installing vim (9.0.2127-r0)
#0 3.490 (13/17) Installing skalibs (2.14.0.1-r0)
#0 3.575 (14/17) Installing utmps-libs (0.1.2.2-r0)
#0 3.613 (15/17) Installing linux-pam (1.5.3-r7)
#0 3.697 (16/17) Installing vsftpd (3.0.5-r2)
#0 3.747 Executing vsftpd-3.0.5-r2.pre-install
#0 3.759 (17/17) Installing vsftpd-openrc (3.0.5-r2)
#0 3.796 Executing busybox-1.36.1-r15.trigger
#0 3.802 OK: 47 MiB in 32 packages
#34 DONE 4.0s

#26 [adminer] exporting to image
#26 exporting layers 0.1s done
#26 writing image sha256:d783471243a2692ab9bfc63aa13ef8a4a91fa860cf702c3b90ff2704bf7a8779
#26 writing image sha256:d783471243a2692ab9bfc63aa13ef8a4a91fa860cf702c3b90ff2704bf7a8779 done
#26 naming to docker.io/library/adminer done
#26 DONE 0.2s

#35 [wordpress 3/9] RUN apk add curl php82 php82-fpm php82-mysqli php82-phar php82-mbstring
#0 0.862 (1/25) Installing ca-certificates (20240226-r0)
#0 1.144 (2/25) Installing brotli-libs (1.1.0-r1)
#0 1.319 (3/25) Installing c-ares (1.27.0-r0)
#0 1.373 (4/25) Installing libunistring (1.1-r2)
#0 1.519 (5/25) Installing libidn2 (2.3.4-r4)
#0 1.580 (6/25) Installing nghttp2-libs (1.58.0-r0)
#0 1.626 (7/25) Installing libcurl (8.5.0-r0)
#0 1.705 (8/25) Installing curl (8.5.0-r0)
#0 1.765 (9/25) Installing php82-common (8.2.18-r0)
#0 1.812 (10/25) Installing argon2-libs (20190702-r5)
#0 1.856 (11/25) Installing ncurses-terminfo-base (6.4_p20231125-r0)
#0 1.904 (12/25) Installing libncursesw (6.4_p20231125-r0)
#0 1.971 (13/25) Installing libedit (20230828.3.1-r3)
#0 2.025 (14/25) Installing pcre2 (10.42-r2)
#0 2.113 (15/25) Installing xz-libs (5.4.5-r0)
#0 2.179 (16/25) Installing libxml2 (2.11.7-r0)
#0 2.346 (17/25) Installing php82 (8.2.18-r0)
#0 2.811 (18/25) Installing libacl (2.3.1-r4)
#0 2.857 (19/25) Installing php82-fpm (8.2.18-r0)
#0 3.391 (20/25) Installing oniguruma (6.9.9-r0)
#0 3.477 (21/25) Installing php82-mbstring (8.2.18-r0)
#0 3.624 (22/25) Installing php82-openssl (8.2.18-r0)
#0 3.689 (23/25) Installing php82-mysqlnd (8.2.18-r0)
#0 3.748 (24/25) Installing php82-mysqli (8.2.18-r0)
#0 3.796 (25/25) Installing php82-phar (8.2.18-r0)
#0 3.947 Executing busybox-1.36.1-r15.trigger
#0 3.958 Executing ca-certificates-20240226-r0.trigger
#0 4.019 OK: 34 MiB in 40 packages
#35 DONE 4.1s

#36 [wordpress 4/9] RUN sed -i "s|127.0.0.1:9000|0.0.0.0:9000|g" /etc/php82/php-fpm.d/www.conf
#36 ...

#37 [ftp 4/6] RUN ADDUSER -D tofaha
#37 DONE 0.3s

#36 [wordpress 4/9] RUN sed -i "s|127.0.0.1:9000|0.0.0.0:9000|g" /etc/php82/php-fpm.d/www.conf
#36 DONE 0.3s

#38 [wordpress 5/9] RUN curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar

#38 ...

#39 [ftp 5/6] RUN ECHO tofaha:1337 | chpasswd
#0 0.380 chpasswd: password for 'tofaha' changed
#39 DONE 0.4s

#38 [wordpress 5/9] RUN curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
#38 0.284 % Total % Received % Xferd Average Speed Time Time Time Current
#38 0.284 Dload Upload Total Spent Left Speed
#38 0.284  0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0
#38 ...

#40 [ftp 6/6] RUN echo "listen=YES" > /etc/vsftpd/vsftpd.conf; echo "local_enable=YES" >> /etc/vsftpd/vsftpd.conf; echo "write_enable=YES" >> /etc/vsftpd/vsftpd.conf; echo "anonymous_enable=NO" >> /etc/vsftpd/vsftpd.conf; echo "chroot_local_user=YES" >> /etc/vsftpd/vsftpd.conf; echo "allow_writeable_chroot=YES" >> /etc/vsftpd/vsftpd.conf; echo "seccomp_sandbox=NO" >> /etc/vsftpd/vsftpd.conf; echo "pasv_enable=YES" >> /etc/vsftpd/vsftpd.conf; echo "pasv_min_port=41337" >> /etc/vsftpd/vsftpd.conf; echo "pasv_max_port=41337" >> /etc/vsftpd/vsftpd.conf;
#40 DONE 0.2s

#26 [ftp] exporting to image
#26 exporting layers 0.3s done
#26 writing image sha256:2a63d68e6d8d551e7c4c3b867a4c587a4d19a355e88199c94d8977969afd1aa8 done
#26 naming to docker.io/library/ftp done
#26 DONE 0.5s

#41 [static-site 3/6] RUN apk add npm apache2
#0 0.957 (1/18) Installing libuuid (2.39.3-r0)
#0 1.119 (2/18) Installing apr (1.7.4-r0)
#0 1.220 (3/18) Installing libexpat (2.6.2-r0)
#0 1.275 (4/18) Installing apr-util (1.6.3-r1)
#0 1.329 (5/18) Installing pcre2 (10.42-r2)
#0 1.507 (6/18) Installing apache2 (2.4.59-r0)
#0 1.566 Executing apache2-2.4.59-r0.pre-install
#0 1.701 (7/18) Installing ca-certificates (20240226-r0)
#0 1.774 (8/18) Installing libgcc (13.2.1_git20231014-r0)
#0 1.820 (9/18) Installing libstdc++ (13.2.1_git20231014-r0)
#0 2.004 (10/18) Installing ada-libs (2.7.4-r0)
#0 2.066 (11/18) Installing brotli-libs (1.1.0-r1)
#0 2.178 (12/18) Installing c-ares (1.27.0-r0)
#0 2.231 (13/18) Installing icu-data-en (74.1-r0)
#0 2.487 Executing icu-data-en-74.1-r0.post-install
#0 2.490 Dockerfile Makefile README.md debugFile script.bash srcs test
#0 2.490 Dockerfile Makefile README.md debugFile script.bash srcs test If you need ICU with non-English locales and legacy charset support, install
#0 2.490 Dockerfile Makefile README.md debugFile script.bash srcs test package icu-data-full.
#0 2.490 Dockerfile Makefile README.md debugFile script.bash srcs test
#0 2.490 (14/18) Installing icu-libs (74.1-r0)
#0 2.919 (15/18) Installing nghttp2-libs (1.58.0-r0)
#0 2.968 (16/18) Installing libuv (1.47.0-r0)
#0 3.031 (17/18) Installing nodejs-current (21.7.2-r0)
#41 5.598 (18/18) Installing npm (10.2.5-r0)
#41 ...

#38 [wordpress 5/9] RUN curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
#38 0.284  0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 67 6831k 67 4582k 0 0 4606k 0 0:00:01 --:--:-- 0:00:01 4610k100 6831k 100 6831k 0 0 5084k 0 0:00:01 0:00:01 --:--:-- 5090k
#38 DONE 1.7s

#41 [static-site 3/6] RUN apk add npm apache2
#41 6.016 Executing busybox-1.36.1-r15.trigger
#41 6.022 Executing ca-certificates-20240226-r0.trigger
#41 6.102 OK: 83 MiB in 33 packages
#41 DONE 6.2s

#42 [wordpress 6/9] RUN chmod +x wp-cli.phar && mv wp-cli.phar /usr/local/bin/wp
#42 ...

#43 [static-site 4/6] WORKDIR /var/www/localhost/htdocs
#43 DONE 0.0s

#44 [static-site 5/6] COPY ./tools .
#44 DONE 0.0s

#42 [wordpress 6/9] RUN chmod +x wp-cli.phar && mv wp-cli.phar /usr/local/bin/wp
#42 DONE 0.3s

#45 [static-site 6/6] RUN npm install vanilla-tilt@1.8.1
#45 ...

#46 [wordpress 7/9] RUN mkdir -p /var/www/html/
#46 DONE 0.3s

#47 [wordpress 8/9] COPY tools/exe.sh /tmp/
#47 DONE 0.0s

#48 [wordpress 9/9] RUN chmod +x /tmp/exe.sh
#48 DONE 0.4s

#49 [portainer 3/3] RUN wget "https://github.com/portainer/portainer/releases/download/2.19.5/portainer-2.19.5-linux-amd64.tar.gz" && tar -xvzf portainer-2.19.5-linux-amd64.tar.gz
#0 0.613 Connecting to github.com (140.82.121.3:443)
#0 1.035 Connecting to objects.githubusercontent.com (185.199.110.133:443)
#0 1.584 saving to 'portainer-2.19.5-linux-amd64.tar.gz'
#0 2.355 portainer-2.19.5-lin 5% |* | 4704k 0:00:16 ETA
#0 3.352 portainer-2.19.5-lin 11% |*** | 9456k 0:00:15 ETA
#0 4.353 portainer-2.19.5-lin 18% |****** | 15.5M 0:00:12 ETA
#0 5.351 portainer-2.19.5-lin 27% |******** | 22.4M 0:00:10 ETA
#0 6.358 portainer-2.19.5-lin 36% |*********** | 30.2M 0:00:08 ETA
#49 ...

#26 [wordpress] exporting to image
#26 exporting layers 0.2s done
#26 writing image sha256:d61867607f490eeb9c184fb4d81f6f23b610eaf1281cda2beb5434c542cf23f3 done
#26 naming to docker.io/library/wordpress done
#26 DONE 0.7s

#49 [portainer 3/3] RUN wget "https://github.com/portainer/portainer/releases/download/2.19.5/portainer-2.19.5-linux-amd64.tar.gz" && tar -xvzf portainer-2.19.5-linux-amd64.tar.gz
#49 7.353 portainer-2.19.5-lin 49% |*************** | 40.5M 0:00:06 ETA
#49 8.351 portainer-2.19.5-lin 63% |******************** | 52.5M 0:00:03 ETA
#49 ...

#45 [static-site 6/6] RUN npm install vanilla-tilt@1.8.1
#45 2.248
#45 2.248 up to date, audited 2 packages in 2s
#45 2.251
#45 2.251 found 0 vulnerabilities
#45 DONE 2.4s

#26 [static-site] exporting to image
#26 exporting layers 0.5s done
#26 writing image sha256:cc2511b4fb5e80442a9271a0ec1aca20eb631c3a1c91db5dd95478ae1873a3b2 done
#26 naming to docker.io/library/static-site done
#26 DONE 1.2s

#29 [mariadb 3/7] RUN apk add curl mariadb mariadb-client openrc
#29 8.375 (23/29) Installing libbz2 (1.0.8-r6)
#29 8.418 (24/29) Installing perl (5.38.2-r0)
#29 9.328 (25/29) Installing mariadb-client (10.11.6-r0)
#29 9.995 (26/29) Installing ifupdown-ng (0.12.1-r4)
#29 10.04 (27/29) Installing libcap2 (2.69-r1)
#29 10.07 (28/29) Installing openrc (0.52.1-r2)
#29 10.14 Executing openrc-0.52.1-r2.post-install
#29 10.15 (29/29) Installing mariadb-openrc (10.11.6-r0)
#29 10.18 Executing busybox-1.36.1-r15.trigger
#29 10.19 Executing ca-certificates-20240226-r0.trigger
#29 10.26 OK: 262 MiB in 44 packages
#29 DONE 10.4s

#49 [portainer 3/3] RUN wget "https://github.com/portainer/portainer/releases/download/2.19.5/portainer-2.19.5-linux-amd64.tar.gz" && tar -xvzf portainer-2.19.5-linux-amd64.tar.gz
#49 9.351 portainer-2.19.5-lin 80% |************************* | 66.6M 0:00:01 ETA
#49 10.29 portainer-2.19.5-lin 100% |********************************| 82.4M 0:00:00 ETA
#49 10.29 'portainer-2.19.5-linux-amd64.tar.gz' saved
#49 10.30 portainer/
#49 ...

#50 [mariadb 4/7] COPY tools/exe.sh /tmp/
#50 DONE 0.0s

#51 [mariadb 5/7] RUN chmod +x /tmp/exe.sh
#51 DONE 0.4s

#52 [mariadb 6/7] RUN sed -i "s|#bind-address=0.0.0.0|bind-address=0.0.0.0|g" /etc/my.cnf.d/mariadb-server.cnf
#52 DONE 0.2s

#49 [portainer 3/3] RUN wget "https://github.com/portainer/portainer/releases/download/2.19.5/portainer-2.19.5-linux-amd64.tar.gz" && tar -xvzf portainer-2.19.5-linux-amd64.tar.gz
#49 ...

#53 [mariadb 7/7] RUN sed -i "s|skip-networking|#skip-networking|g" /etc/my.cnf.d/mariadb-server.cnf
#53 DONE 0.3s

#26 [mariadb] exporting to image
#26 exporting layers 1.1s done
#26 writing image sha256:3b70d91c73ba9966987ebc20064f57d3bdac56c45a7d7b071375382e00b0d7ca done
#26 naming to docker.io/library/mariadb done
#26 DONE 2.4s

#49 [portainer 3/3] RUN wget "https://github.com/portainer/portainer/releases/download/2.19.5/portainer-2.19.5-linux-amd64.tar.gz" && tar -xvzf portainer-2.19.5-linux-amd64.tar.gz
#49 12.72 portainer/helm
#49 12.72 portainer/docker
#49 12.72 portainer/portainer
#49 12.72 portainer/mustache-templates/
#49 12.72 portainer/mustache-templates/upgrade-docker.yml.mustache
#49 12.72 portainer/docker-compose
#49 12.72 portainer/kubectl
#49 12.72 portainer/public/
#49 12.72 portainer/public/060b2710bdbbe3dfe48b.svg
#49 12.72 portainer/public/c2c179f41199d25e0055.png
#49 12.72 portainer/public/2b3c7053dcd54989a6f5.png
#49 12.72 portainer/public/51906a7e4bd0e1d9e771.png
#49 12.72 portainer/public/d3a18c5002453f58c8b9.png
#49 12.72 portainer/public/19c2b168a8d85994e14e.png
#49 12.72 portainer/public/6d50eaeb9f128c130ed9.xml
#49 12.72 portainer/public/main.7d6053e1c574421c1788.css
#49 12.72 portainer/public/main.7d6053e1c574421c1788.css.map
#49 12.72 portainer/public/vendor.c6c227160a59d929ec43.js.LICENSE.txt
#49 12.72 portainer/public/runtime.942fa683274b3d3c26cf.js
#49 12.72 portainer/public/7e697c5bab4f819328df.svg
#49 12.72 portainer/public/63a301f0574f1a696ce6.png
#49 12.72 portainer/public/index.html
#49 12.72 portainer/public/main.712d6f30396f42406a3d.js.LICENSE.txt
#49 12.72 portainer/public/63c1259abd88a9d2cebc.svg
#49 12.72 portainer/public/main.712d6f30396f42406a3d.js.map
#49 12.72 portainer/public/vendor.c6c227160a59d929ec43.js.map
#49 12.72 portainer/public/vendor.b4533442c1cbb18b98a1.css.map
#49 12.78 portainer/public/locales/
#49 12.78 portainer/public/locales/en/
#49 12.78 portainer/public/locales/en/translation.json
#49 12.78 portainer/public/timeout.html
#49 12.78 portainer/public/main.712d6f30396f42406a3d.js
#49 12.78 portainer/public/runtime.942fa683274b3d3c26cf.js.map
#49 12.78 portainer/public/9d07a3ace464cfd6e27c.png
#49 12.78 portainer/public/112a479c093f4729251d.png
#49 12.78 portainer/public/vendor.b4533442c1cbb18b98a1.css
#49 12.78 portainer/public/vendor.c6c227160a59d929ec43.js
#49 12.78 portainer/public/2dcfc527d067d4ae3424.png
#49 DONE 13.2s

#26 [portainer] exporting to image
#26 exporting layers 1.3s done
#26 writing image sha256:1c6ae98611e6bbdb50cb37a5a0ce0695cb639b688902c3d70f16b28e19c8cfae done
#26 naming to docker.io/library/portainer done
#26 DONE 3.7s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
