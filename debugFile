#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 32B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 32B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/alpine:3.19
#3 DONE 0.7s

#4 [1/6] FROM docker.io/library/alpine:3.19@sha256:c5b1261d6d3e43071626931fc004f70149baeba2c8ec672bd4f27761f8e1ad6b
meow ::: #4 [1/6] FROM docker.io/library/alpine:3.19@sha256:c5b1261d6d3e43071626931fc004f70149baeba2c8ec672bd4f27761f8e1ad6b ::::
meow ::: ::::
meow ::: 1 ::::
meow ::: 6 ::::
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 2.13kB done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 34B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/alpine:3.19
#3 DONE 0.8s

#4 [1/6] FROM docker.io/library/alpine:3.19@sha256:c5b1261d6d3e43071626931fc004f70149baeba2c8ec672bd4f27761f8e1ad6b
meow ::: #4 [1/6] FROM docker.io/library/alpine:3.19@sha256:c5b1261d6d3e43071626931fc004f70149baeba2c8ec672bd4f27761f8e1ad6b ::::
meow ::: ::::
meow ::: 1 ::::
meow ::: 6 ::::
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 32B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 32B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/alpine:3.19
#3 DONE 0.7s

#4 [1/6] FROM docker.io/library/alpine:3.19@sha256:c5b1261d6d3e43071626931fc004f70149baeba2c8ec672bd4f27761f8e1ad6b
meow ::: #4 [1/6] FROM docker.io/library/alpine:3.19@sha256:c5b1261d6d3e43071626931fc004f70149baeba2c8ec672bd4f27761f8e1ad6b ::::
meow ::: uwu ::::
meow ::: 1 ::::
meow ::: 6 ::::
#4 CACHED

#5 [2/6] RUN apk upgrade && apk update
meow ::: #5 [2/6] RUN apk upgrade && apk update ::::
meow ::: uwu ::::
meow ::: 2 ::::
meow ::: 6 ::::
#5 0.148 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/main/x86_64/APKINDEX.tar.gz
#5 0.524 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/community/x86_64/APKINDEX.tar.gz
#5 0.963 Upgrading critical system libraries and apk-tools:
#5 0.963 (1/1) Upgrading apk-tools (2.14.0-r5 -> 2.14.4-r0)
#5 1.012 Executing busybox-1.36.1-r15.trigger
#5 1.070 Continuing the upgrade transaction with new apk-tools:
#5 1.075 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/main/x86_64/APKINDEX.tar.gz
#5 1.451 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/community/x86_64/APKINDEX.tar.gz
#5 1.925 (1/3) Upgrading ca-certificates-bundle (20230506-r0 -> 20240226-r0)
#5 1.976 (2/3) Upgrading libcrypto3 (3.1.4-r5 -> 3.1.4-r6)
#5 2.087 (3/3) Upgrading libssl3 (3.1.4-r5 -> 3.1.4-r6)
#5 2.140 OK: 7 MiB in 15 packages
#5 2.203 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/main/x86_64/APKINDEX.tar.gz
#5 2.536 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/community/x86_64/APKINDEX.tar.gz
#5 2.993 v3.19.1-476-g0fc5112363c [https://dl-cdn.alpinelinux.org/alpine/v3.19/main]
#5 2.993 v3.19.1-476-g0fc5112363c [https://dl-cdn.alpinelinux.org/alpine/v3.19/community]
#5 2.993 OK: 22991 distinct packages available
#5 DONE 3.1s

#6 [3/6] RUN apk add openrc vim lftp vsftpd
meow ::: #6 [3/6] RUN apk add openrc vim lftp vsftpd ::::
meow ::: uwu ::::
meow ::: 3 ::::
meow ::: 6 ::::
#6 0.413 (1/17) Installing ncurses-terminfo-base (6.4_p20231125-r0)
#6 0.610 (2/17) Installing libncursesw (6.4_p20231125-r0)
#6 0.740 (3/17) Installing readline (8.2.1-r2)
#6 0.797 (4/17) Installing libgcc (13.2.1_git20231014-r0)
#6 0.848 (5/17) Installing libstdc++ (13.2.1_git20231014-r0)
#6 0.993 (6/17) Installing lftp (4.9.2-r6)
#6 1.094 (7/17) Installing ifupdown-ng (0.12.1-r4)
#6 1.139 (8/17) Installing libcap2 (2.69-r1)
#6 1.183 (9/17) Installing openrc (0.52.1-r2)
#6 1.247 Executing openrc-0.52.1-r2.post-install
#6 1.250 (10/17) Installing vim-common (9.0.2127-r0)
#6 1.608 (11/17) Installing xxd (9.0.2127-r0)
#6 1.650 (12/17) Installing vim (9.0.2127-r0)
#6 1.740 (13/17) Installing skalibs (2.14.0.1-r0)
#6 1.785 (14/17) Installing utmps-libs (0.1.2.2-r0)
#6 1.830 (15/17) Installing linux-pam (1.5.3-r7)
#6 1.896 (16/17) Installing vsftpd (3.0.5-r2)
#6 1.941 Executing vsftpd-3.0.5-r2.pre-install
#6 1.954 (17/17) Installing vsftpd-openrc (3.0.5-r2)
#6 1.997 Executing busybox-1.36.1-r15.trigger
#6 2.003 OK: 47 MiB in 32 packages
#6 DONE 2.1s

#7 [4/6] RUN ADDUSER -D tofaha
meow ::: #7 [4/6] RUN ADDUSER -D tofaha ::::
meow ::: uwu ::::
meow ::: 4 ::::
meow ::: 6 ::::
#7 DONE 0.2s

#8 [5/6] RUN ECHO tofaha:1337 | chpasswd
meow ::: #8 [5/6] RUN ECHO tofaha:1337 | chpasswd ::::
meow ::: uwu ::::
meow ::: 5 ::::
meow ::: 6 ::::
#8 0.169 chpasswd: password for 'tofaha' changed
#8 DONE 0.2s

#9 [6/6] RUN echo "listen=YES" > /etc/vsftpd/vsftpd.conf; echo "local_enable=YES" >> /etc/vsftpd/vsftpd.conf; echo "write_enable=YES" >> /etc/vsftpd/vsftpd.conf; echo "anonymous_enable=NO" >> /etc/vsftpd/vsftpd.conf; echo "chroot_local_user=YES" >> /etc/vsftpd/vsftpd.conf; echo "allow_writeable_chroot=YES" >> /etc/vsftpd/vsftpd.conf; echo "seccomp_sandbox=NO" >> /etc/vsftpd/vsftpd.conf; echo "pasv_enable=YES" >> /etc/vsftpd/vsftpd.conf; echo "pasv_min_port=41337" >> /etc/vsftpd/vsftpd.conf; echo "pasv_max_port=41337" >> /etc/vsftpd/vsftpd.conf;
meow ::: #9 [6/6] RUN echo "listen=YES" > /etc/vsftpd/vsftpd.conf; echo "local_enable=YES" >> /etc/vsftpd/vsftpd.conf; echo "write_enable=YES" >> /etc/vsftpd/vsftpd.conf; echo "anonymous_enable=NO" >> /etc/vsftpd/vsftpd.conf; echo "chroot_local_user=YES" >> /etc/vsftpd/vsftpd.conf; echo "allow_writeable_chroot=YES" >> /etc/vsftpd/vsftpd.conf; echo "seccomp_sandbox=NO" >> /etc/vsftpd/vsftpd.conf; echo "pasv_enable=YES" >> /etc/vsftpd/vsftpd.conf; echo "pasv_min_port=41337" >> /etc/vsftpd/vsftpd.conf; echo "pasv_max_port=41337" >> /etc/vsftpd/vsftpd.conf; ::::
meow ::: uwu ::::
meow ::: 6 ::::
meow ::: 6 ::::
#9 DONE 0.2s

#10 exporting to image
#10 exporting layers
#10 exporting layers 0.3s done
#10 writing image sha256:ef31da7a5191a701a3ee205989f8e0faf77dfbcbeb74609a25f621fa30f97936 done
#10 naming to docker.io/library/ftp done
#10 DONE 0.3s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile:
#1 transferring dockerfile: 32B done
#1 DONE 0.0s

#2 [internal] load .dockerignore
#2 transferring context: 32B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/alpine:3.19
#3 ...

#4 [auth] library/alpine:pull token for registry-1.docker.io
#4 DONE 0.0s

#3 [internal] load metadata for docker.io/library/alpine:3.19
#3 DONE 1.9s

#5 [1/6] FROM docker.io/library/alpine:3.19@sha256:c5b1261d6d3e43071626931fc004f70149baeba2c8ec672bd4f27761f8e1ad6b
#5 CACHED

#6 [2/6] RUN apk upgrade && apk update
#6 0.165 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/main/x86_64/APKINDEX.tar.gz
#6 0.619 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/community/x86_64/APKINDEX.tar.gz
#6 1.065 Upgrading critical system libraries and apk-tools:
#6 1.065 (1/1) Upgrading apk-tools (2.14.0-r5 -> 2.14.4-r0)
#6 1.115 Executing busybox-1.36.1-r15.trigger
#6 1.174 Continuing the upgrade transaction with new apk-tools:
#6 1.178 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/main/x86_64/APKINDEX.tar.gz
#6 1.549 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/community/x86_64/APKINDEX.tar.gz
#6 1.959 (1/3) Upgrading ca-certificates-bundle (20230506-r0 -> 20240226-r0)
#6 2.009 (2/3) Upgrading libcrypto3 (3.1.4-r5 -> 3.1.4-r6)
#6 2.182 (3/3) Upgrading libssl3 (3.1.4-r5 -> 3.1.4-r6)
#6 2.238 OK: 7 MiB in 15 packages
#6 2.295 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/main/x86_64/APKINDEX.tar.gz
#6 2.638 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/community/x86_64/APKINDEX.tar.gz
#6 3.023 v3.19.1-476-g0fc5112363c [https://dl-cdn.alpinelinux.org/alpine/v3.19/main]
#6 3.023 v3.19.1-476-g0fc5112363c [https://dl-cdn.alpinelinux.org/alpine/v3.19/community]
#6 3.023 OK: 22991 distinct packages available
#6 DONE 3.1s

#7 [3/6] RUN apk add openrc vim lftp vsftpd
#7 0.430 (1/17) Installing ncurses-terminfo-base (6.4_p20231125-r0)
#7 0.623 (2/17) Installing libncursesw (6.4_p20231125-r0)
#7 0.744 (3/17) Installing readline (8.2.1-r2)
#7 0.797 (4/17) Installing libgcc (13.2.1_git20231014-r0)
#7 0.843 (5/17) Installing libstdc++ (13.2.1_git20231014-r0)
#7 0.983 (6/17) Installing lftp (4.9.2-r6)
#7 1.074 (7/17) Installing ifupdown-ng (0.12.1-r4)
#7 1.118 (8/17) Installing libcap2 (2.69-r1)
#7 1.201 (9/17) Installing openrc (0.52.1-r2)
#7 1.266 Executing openrc-0.52.1-r2.post-install
#7 1.269 (10/17) Installing vim-common (9.0.2127-r0)
#7 1.631 (11/17) Installing xxd (9.0.2127-r0)
#7 1.673 (12/17) Installing vim (9.0.2127-r0)
#7 1.764 (13/17) Installing skalibs (2.14.0.1-r0)
#7 1.809 (14/17) Installing utmps-libs (0.1.2.2-r0)
#7 1.850 (15/17) Installing linux-pam (1.5.3-r7)
#7 1.905 (16/17) Installing vsftpd (3.0.5-r2)
#7 1.953 Executing vsftpd-3.0.5-r2.pre-install
#7 1.965 (17/17) Installing vsftpd-openrc (3.0.5-r2)
#7 2.007 Executing busybox-1.36.1-r15.trigger
#7 2.013 OK: 47 MiB in 32 packages
#7 DONE 2.1s

#8 [4/6] RUN ADDUSER -D tofaha
#8 DONE 0.2s

#9 [5/6] RUN ECHO tofaha:1337 | chpasswd
#9 0.196 chpasswd: password for 'tofaha' changed
#9 DONE 0.2s

#10 [6/6] RUN echo "listen=YES" > /etc/vsftpd/vsftpd.conf; echo "local_enable=YES" >> /etc/vsftpd/vsftpd.conf; echo "write_enable=YES" >> /etc/vsftpd/vsftpd.conf; echo "anonymous_enable=NO" >> /etc/vsftpd/vsftpd.conf; echo "chroot_local_user=YES" >> /etc/vsftpd/vsftpd.conf; echo "allow_writeable_chroot=YES" >> /etc/vsftpd/vsftpd.conf; echo "seccomp_sandbox=NO" >> /etc/vsftpd/vsftpd.conf; echo "pasv_enable=YES" >> /etc/vsftpd/vsftpd.conf; echo "pasv_min_port=41337" >> /etc/vsftpd/vsftpd.conf; echo "pasv_max_port=41337" >> /etc/vsftpd/vsftpd.conf;
#10 DONE 0.2s

#11 exporting to image
#11 exporting layers
#11 exporting layers 0.2s done
#11 writing image sha256:24d5cd5183ecc3706bc7a188967edfe6b0de84fb9b2a933b1ff59478b64dfcc2 done
#11 naming to docker.io/library/ftp done
#11 DONE 0.2s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
#1 [mariadb internal] load build definition from Dockerfile
#1 transferring dockerfile: 32B done
#1 DONE 0.0s

#2 [wordpress internal] load build definition from Dockerfile
#2 transferring dockerfile: 32B done
#2 DONE 0.0s

#3 [nginx internal] load build definition from Dockerfile
#3 transferring dockerfile: 32B done
#3 DONE 0.0s

#4 [ftp internal] load build definition from Dockerfile
#4 transferring dockerfile: 32B done
#4 DONE 0.0s

#5 [redis internal] load build definition from Dockerfile
#5 transferring dockerfile: 31B done
#5 DONE 0.0s

#6 [wordpress internal] load .dockerignore
#6 transferring context: 2B done
#6 DONE 0.0s

#7 [ftp internal] load .dockerignore
#7 transferring context: 32B done
#7 DONE 0.0s

#8 [nginx internal] load .dockerignore
#8 transferring context: 32B done
#8 DONE 0.0s

#9 [redis internal] load .dockerignore
#9 transferring context: 32B done
#9 DONE 0.0s

#10 [mariadb internal] load .dockerignore
#10 transferring context: 32B done
#10 DONE 0.0s

#11 [mariadb internal] load metadata for docker.io/library/alpine:3.19
#11 DONE 1.0s

#12 [nginx internal] load build context
#12 transferring context: 63B done
#12 DONE 0.0s

#13 [mariadb internal] load build context
#13 transferring context: 59B done
#13 DONE 0.0s

#14 [wordpress 1/6] FROM docker.io/library/alpine:3.19@sha256:c5b1261d6d3e43071626931fc004f70149baeba2c8ec672bd4f27761f8e1ad6b
#14 CACHED

#15 [wordpress internal] load build context
#15 transferring context: 59B done
#15 DONE 0.0s

#16 [redis 2/6] RUN apk upgrade && apk update
#16 0.201 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/main/x86_64/APKINDEX.tar.gz
#16 0.815 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/community/x86_64/APKINDEX.tar.gz
#16 1.263 Upgrading critical system libraries and apk-tools:
#16 1.263 (1/1) Upgrading apk-tools (2.14.0-r5 -> 2.14.4-r0)
#16 1.321 Executing busybox-1.36.1-r15.trigger
#16 1.378 Continuing the upgrade transaction with new apk-tools:
#16 1.383 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/main/x86_64/APKINDEX.tar.gz
#16 1.853 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/community/x86_64/APKINDEX.tar.gz
#16 2.779 (1/3) Upgrading ca-certificates-bundle (20230506-r0 -> 20240226-r0)
#16 2.846 (2/3) Upgrading libcrypto3 (3.1.4-r5 -> 3.1.4-r6)
#16 3.219 (3/3) Upgrading libssl3 (3.1.4-r5 -> 3.1.4-r6)
#16 3.309 OK: 7 MiB in 15 packages
#16 3.362 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/main/x86_64/APKINDEX.tar.gz
#16 3.763 fetch https://dl-cdn.alpinelinux.org/alpine/v3.19/community/x86_64/APKINDEX.tar.gz
#16 4.150 v3.19.1-476-g0fc5112363c [https://dl-cdn.alpinelinux.org/alpine/v3.19/main]
#16 4.150 v3.19.1-476-g0fc5112363c [https://dl-cdn.alpinelinux.org/alpine/v3.19/community]
#16 4.150 OK: 22991 distinct packages available
#16 DONE 4.3s

#17 [redis 3/3] RUN apk add redis
#17 0.760 (1/1) Installing redis (7.2.4-r0)
#17 1.026 Executing redis-7.2.4-r0.pre-install
#17 1.243 Executing redis-7.2.4-r0.post-install
#17 1.247 Executing busybox-1.36.1-r15.trigger
#17 1.252 OK: 11 MiB in 16 packages
#17 DONE 1.4s

#18 [redis] exporting to image
#18 exporting layers
#18 exporting layers 0.1s done
#18 writing image sha256:4ef1aa6f587eebd5e5ba8f6fdc7519f868f51fecc0934e5ad9a008821f9f7c98 done
#18 naming to docker.io/library/redis done
#18 DONE 0.1s

#19 [ftp 3/6] RUN apk add openrc vim lftp vsftpd
#0 0.795 (1/17) Installing ncurses-terminfo-base (6.4_p20231125-r0)
#0 0.968 (2/17) Installing libncursesw (6.4_p20231125-r0)
#0 1.104 (3/17) Installing readline (8.2.1-r2)
#0 1.170 (4/17) Installing libgcc (13.2.1_git20231014-r0)
#0 1.219 (5/17) Installing libstdc++ (13.2.1_git20231014-r0)
#0 1.364 (6/17) Installing lftp (4.9.2-r6)
#0 1.462 (7/17) Installing ifupdown-ng (0.12.1-r4)
#0 1.501 (8/17) Installing libcap2 (2.69-r1)
#0 1.541 (9/17) Installing openrc (0.52.1-r2)
#19 1.604 Executing openrc-0.52.1-r2.post-install
#19 1.606 (10/17) Installing vim-common (9.0.2127-r0)
#19 ...

#20 [nginx 3/6] RUN apk add nginx && apk add openssl
#0 0.771 (1/2) Installing pcre (8.45-r3)
#0 1.040 (2/2) Installing nginx (1.24.0-r16)
#0 1.104 Executing nginx-1.24.0-r16.pre-install
#0 1.182 Executing nginx-1.24.0-r16.post-install
#0 1.187 Executing busybox-1.36.1-r15.trigger
#0 1.194 OK: 9 MiB in 17 packages
#0 1.612 (1/1) Installing openssl (3.1.4-r6)
#0 1.886 Executing busybox-1.36.1-r15.trigger
#0 1.891 OK: 10 MiB in 18 packages
#20 DONE 2.0s

#21 [mariadb 3/7] RUN apk add curl mariadb mariadb-client openrc
#0 0.719 (1/29) Installing ca-certificates (20240226-r0)
#0 0.978 (2/29) Installing brotli-libs (1.1.0-r1)
#0 1.096 (3/29) Installing c-ares (1.27.0-r0)
#0 1.151 (4/29) Installing libunistring (1.1-r2)
#0 1.264 (5/29) Installing libidn2 (2.3.4-r4)
#0 1.322 (6/29) Installing nghttp2-libs (1.58.0-r0)
#0 1.364 (7/29) Installing libcurl (8.5.0-r0)
#0 1.438 (8/29) Installing curl (8.5.0-r0)
#0 1.489 (9/29) Installing mariadb-common (10.11.6-r0)
#0 1.565 (10/29) Installing libaio (0.3.113-r2)
#0 1.602 (11/29) Installing libgcc (13.2.1_git20231014-r0)
#0 1.643 (12/29) Installing xz-libs (5.4.5-r0)
#0 1.693 (13/29) Installing ncurses-terminfo-base (6.4_p20231125-r0)
#0 1.736 (14/29) Installing libncursesw (6.4_p20231125-r0)
#0 1.788 (15/29) Installing skalibs (2.14.0.1-r0)
#0 1.833 (16/29) Installing utmps-libs (0.1.2.2-r0)
#0 1.870 (17/29) Installing linux-pam (1.5.3-r7)
#0 1.931 (18/29) Installing pcre2 (10.42-r2)
#0 2.002 (19/29) Installing libstdc++ (13.2.1_git20231014-r0)
#0 2.120 (20/29) Installing libxml2 (2.11.7-r0)
#0 2.190 (21/29) Installing zstd-libs (1.5.5-r8)
#21 ...

#22 [nginx 4/6] RUN mkdir /var/www/html
#22 DONE 0.3s

#21 [mariadb 3/7] RUN apk add curl mariadb mariadb-client openrc
#21 2.245 (22/29) Installing mariadb (10.11.6-r0)
#21 2.315 Executing mariadb-10.11.6-r0.pre-install
#21 ...

#23 [nginx 5/6] RUN openssl req -x509 -nodes -days 365 -subj "/C=CA/ST=QC/O=Company, Inc./CN=mydomain.com" -addext "subjectAltName=DNS:mydomain.com" -newkey rsa:2048 -keyout /etc/ssl/private/nginx-selfsigned.key -out /etc/ssl/certs/nginx-selfsigned.crt
#0 0.220 ...+++++++++++++++++++++++++++++++++++++++*...+..+...+.+...........+....+......+...+........+.........+....+.....+.+++++++++++++++++++++++++++++++++++++++*.+......+......+....+........+.+..+...+..........+.........+..+.+........+......+...+......+....++++++
#0 0.237 ..+.....+...+...+.+.....+....+............+++++++++++++++++++++++++++++++++++++++*..+++++++++++++++++++++++++++++++++++++++*..........+..+............+......+.+.....+....+......+.....+...+.......+......+..+...+....+...+...+...+..+.......+..+....+..+....+.....+....+......+......+........+....+...+...+.................+.........+...+.......+...+...............+..+......+.......+......+..+...+.......+..+...+...+.+.........+......+.........+.....+.+...+........+.......+..+....+..+...+....+.....+.+..............+.+..+...+.........+...+.........+..........+.....+...+............+.+..+...++++++
#0 0.298 -----
#23 DONE 0.4s

#24 [nginx 6/6] COPY conf/default.conf /etc/nginx/http.d/
#24 DONE 0.0s

#18 [nginx] exporting to image
#18 exporting layers 0.0s done
#18 writing image sha256:c7a8a1115bde8ec0291f54c5040b66be07cc762b96036378e704bff4b8c63bb7 done
#18 naming to docker.io/library/nginx done
#18 DONE 0.1s

#19 [ftp 3/6] RUN apk add openrc vim lftp vsftpd
#19 2.121 (11/17) Installing xxd (9.0.2127-r0)
#19 2.231 (12/17) Installing vim (9.0.2127-r0)
#19 2.443 (13/17) Installing skalibs (2.14.0.1-r0)
#19 2.508 (14/17) Installing utmps-libs (0.1.2.2-r0)
#19 2.547 (15/17) Installing linux-pam (1.5.3-r7)
#19 2.636 (16/17) Installing vsftpd (3.0.5-r2)
#19 2.685 Executing vsftpd-3.0.5-r2.pre-install
#19 2.700 (17/17) Installing vsftpd-openrc (3.0.5-r2)
#19 2.739 Executing busybox-1.36.1-r15.trigger
#19 2.746 OK: 47 MiB in 32 packages
#19 DONE 2.9s

#25 [ftp 4/6] RUN ADDUSER -D tofaha
#25 ...

#26 [wordpress 3/9] RUN apk add curl php82 php82-fpm php82-mysqli php82-phar php82-mbstring
#0 0.799 (1/25) Installing ca-certificates (20240226-r0)
#0 1.052 (2/25) Installing brotli-libs (1.1.0-r1)
#0 1.176 (3/25) Installing c-ares (1.27.0-r0)
#0 1.227 (4/25) Installing libunistring (1.1-r2)
#0 1.343 (5/25) Installing libidn2 (2.3.4-r4)
#0 1.439 (6/25) Installing nghttp2-libs (1.58.0-r0)
#0 1.483 (7/25) Installing libcurl (8.5.0-r0)
#0 1.547 (8/25) Installing curl (8.5.0-r0)
#0 1.598 (9/25) Installing php82-common (8.2.18-r0)
#0 1.636 (10/25) Installing argon2-libs (20190702-r5)
#0 1.675 (11/25) Installing ncurses-terminfo-base (6.4_p20231125-r0)
#0 1.719 (12/25) Installing libncursesw (6.4_p20231125-r0)
#0 1.772 (13/25) Installing libedit (20230828.3.1-r3)
#0 1.817 (14/25) Installing pcre2 (10.42-r2)
#0 1.889 (15/25) Installing xz-libs (5.4.5-r0)
#0 1.940 (16/25) Installing libxml2 (2.11.7-r0)
#0 2.032 (17/25) Installing php82 (8.2.18-r0)
#0 2.187 (18/25) Installing libacl (2.3.1-r4)
#0 2.225 (19/25) Installing php82-fpm (8.2.18-r0)
#0 2.479 (20/25) Installing oniguruma (6.9.9-r0)
#0 2.549 (21/25) Installing php82-mbstring (8.2.18-r0)
#0 2.676 (22/25) Installing php82-openssl (8.2.18-r0)
#0 2.722 (23/25) Installing php82-mysqlnd (8.2.18-r0)
#0 2.766 (24/25) Installing php82-mysqli (8.2.18-r0)
#0 2.808 (25/25) Installing php82-phar (8.2.18-r0)
#0 2.860 Executing busybox-1.36.1-r15.trigger
#0 2.868 Executing ca-certificates-20240226-r0.trigger
#0 2.914 OK: 34 MiB in 40 packages
#26 DONE 3.1s

#25 [ftp 4/6] RUN ADDUSER -D tofaha
#25 DONE 0.3s

#27 [wordpress 4/9] RUN sed -i "s|127.0.0.1:9000|0.0.0.0:9000|g" /etc/php82/php-fpm.d/www.conf
#27 DONE 0.3s

#28 [wordpress 5/9] RUN curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
#28 ...

#29 [ftp 5/6] RUN ECHO tofaha:1337 | chpasswd
#0 0.401 chpasswd: password for 'tofaha' changed
#29 DONE 0.4s

#30 [ftp 6/6] RUN echo "listen=YES" > /etc/vsftpd/vsftpd.conf; echo "local_enable=YES" >> /etc/vsftpd/vsftpd.conf; echo "write_enable=YES" >> /etc/vsftpd/vsftpd.conf; echo "anonymous_enable=NO" >> /etc/vsftpd/vsftpd.conf; echo "chroot_local_user=YES" >> /etc/vsftpd/vsftpd.conf; echo "allow_writeable_chroot=YES" >> /etc/vsftpd/vsftpd.conf; echo "seccomp_sandbox=NO" >> /etc/vsftpd/vsftpd.conf; echo "pasv_enable=YES" >> /etc/vsftpd/vsftpd.conf; echo "pasv_min_port=41337" >> /etc/vsftpd/vsftpd.conf; echo "pasv_max_port=41337" >> /etc/vsftpd/vsftpd.conf;
#30 DONE 0.6s

#21 [mariadb 3/7] RUN apk add curl mariadb mariadb-client openrc
#21 4.362 (23/29) Installing libbz2 (1.0.8-r6)
#21 4.400 (24/29) Installing perl (5.38.2-r0)
#21 ...

#18 [ftp] exporting to image
#18 exporting layers 0.3s done
#18 writing image sha256:2984e99eb2120dc9af992a1fa87b535263cc0db6a65e04c66d7a80c4a05c8a41 done
#18 naming to docker.io/library/ftp done
#18 DONE 0.4s

#28 [wordpress 5/9] RUN curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
#28 0.737 % Total % Received % Xferd Average Speed Time Time Time Current
#28 0.737 Dload Upload Total Spent Left Speed
#28 0.737  0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 79 6831k 79 5423k 0 0 5119k 0 0:00:01 0:00:01 --:--:-- 5121k100 6831k 100 6831k 0 0 5742k 0 0:00:01 0:00:01 --:--:-- 5745k
#28 DONE 2.1s

#31 [wordpress 6/9] RUN chmod +x wp-cli.phar && mv wp-cli.phar /usr/local/bin/wp
#31 DONE 0.2s

#21 [mariadb 3/7] RUN apk add curl mariadb mariadb-client openrc
#21 4.851 (25/29) Installing mariadb-client (10.11.6-r0)
#21 5.450 (26/29) Installing ifupdown-ng (0.12.1-r4)
#21 5.489 (27/29) Installing libcap2 (2.69-r1)
#21 5.525 (28/29) Installing openrc (0.52.1-r2)
#21 5.584 Executing openrc-0.52.1-r2.post-install
#21 5.587 (29/29) Installing mariadb-openrc (10.11.6-r0)
#21 5.624 Executing busybox-1.36.1-r15.trigger
#21 5.629 Executing ca-certificates-20240226-r0.trigger
#21 5.688 OK: 262 MiB in 44 packages
#21 DONE 5.8s

#32 [wordpress 7/9] RUN mkdir -p /var/www/html/
#32 ...

#33 [mariadb 4/7] COPY tools/exe.sh /tmp/
#33 DONE 0.0s

#34 [mariadb 5/7] RUN chmod +x /tmp/exe.sh
#34 ...

#32 [wordpress 7/9] RUN mkdir -p /var/www/html/
#32 DONE 0.5s

#34 [mariadb 5/7] RUN chmod +x /tmp/exe.sh
#34 DONE 0.4s

#35 [wordpress 8/9] COPY tools/exe.sh /tmp/
#35 DONE 0.0s

#36 [wordpress 9/9] RUN chmod +x /tmp/exe.sh
#36 DONE 0.2s

#37 [mariadb 6/7] RUN sed -i "s|#bind-address=0.0.0.0|bind-address=0.0.0.0|g" /etc/my.cnf.d/mariadb-server.cnf
#37 DONE 0.2s

#18 [wordpress] exporting to image
#18 exporting layers 0.2s done
#18 ...

#38 [mariadb 7/7] RUN sed -i "s|skip-networking|#skip-networking|g" /etc/my.cnf.d/mariadb-server.cnf
#38 DONE 0.3s

#18 [mariadb] exporting to image
#18 writing image sha256:de3396ecd5b975c75e223bd652f83e541caaab8f8e9669185f6f19effe9a7a25 done
#18 naming to docker.io/library/wordpress done
#18 exporting layers 1.1s done
#18 writing image sha256:3d3e0fda4bad5418fb10efe720b6376f67e652fdc543586c764559ac9b613587 done
#18 naming to docker.io/library/mariadb done
#18 DONE 1.6s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
